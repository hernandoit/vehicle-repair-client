{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/cars.js","components/cars/AddCar.js","components/cars/IndexCars.js","components/cars/ShowCars.js","components/shared/CarForm.js","components/cars/UpdateCar.js","api/tickets.js","components/tickets/AddTicket.js","components/tickets/ShowTickets.js","components/tickets/UpdateTicket.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showCars","AddCar","handleSubmmit","car","addCar","err","year","make","model","IndexCars","cars","indexCars","carJsx","length","map","_id","ShowCars","handleDelete","match","destroyCar","params","ticket","owner","onClick","CarForm","handleSubmit","UpdateItem","userInput","currState","updateCar","showTickets","carId","ticketId","AddTicket","addTicket","job","labor","isComplete","ShowTickets","destroyTicket","undefined","console","log","UpdateTicket","updateTicket","App","msgAlerts","filter","msg","uuid","path","UpdateCar","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.131a8288.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/add-cars' className='nav-link'>Add Vehicle</NavLink>\n    <NavLink to='/cars' className='nav-link'>Index of Vehicles</NavLink>\n    <NavLink to='/add-tickets' className='nav-link'>Add Ticket</NavLink>\n    <NavLink to='/tickets' className='nav-link'>Index of Tickets</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Vehicle Repair</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://salty-river-98460.herokuapp.com/',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","// apiUrl will be either the production or development url defined\n// in the apiConfig.js file\nimport apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Car Request\n// assume that `data` is an object with `title` and `director`\n// { title: 'something', director: 'someone' }\nexport const addCar = (data, user) => {\n  return axios({\n    url: apiUrl + '/cars',\n    method: 'post',\n    data: { car: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// Index request\n// no data, we will need a token\nexport const indexCars = (user) => {\n  return axios({\n    // method key sets the HTTP verb/method for this request\n    // GET is the default method, so we can include or not up to us\n    method: 'GET',\n    url: apiUrl + '/cars',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// GET /cars/:id\nexport const showCars = (id, user) => {\n  return axios({\n    url: apiUrl + '/cars/' + id,\n    // method is optional, default is GET\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /cars/:id\nexport const destroyCar = (id, user) => {\n  return axios({\n    url: apiUrl + '/cars/' + id,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /cars/:id\nexport const updateCar = (data, id, user) => {\n  return axios({\n    url: apiUrl + '/cars/' + id,\n    method: 'PATCH',\n    data: { car: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { addCar } from '../../api/cars'\n\nimport { withRouter } from 'react-router-dom'\n\nclass AddCar extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      year: null,\n      make: '',\n      model: ''\n    }\n  }\n\n  handleChange = (event) => {\n    // the event.target of this event will be an input element\n    // which will have a `name` attribute (key in the state) & a 'value' (what the user typed)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history } = this.props\n\n    addCar(this.state, user)\n      .then(res => history.push('/cars'))\n      .then(() => msgAlert({ heading: 'Car Added!', message: 'Nice work, your vehicle has been added.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Adding Car failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmmit}>\n          <Form.Group>\n            <Form.Label>Year\n            </Form.Label>\n            <Form.Control\n              required\n              onChange={this.handleChange}\n              name='year'\n              value= {this.state.year}\n              placeholder='Year'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Make\n            </Form.Label>\n            <Form.Control\n              required\n              name='make'\n              onChange={this.handleChange}\n              value= {this.state.make}\n              placeholder='Make'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Model\n            </Form.Label>\n            <Form.Control\n              required\n              name='model'\n              onChange={this.handleChange}\n              value= {this.state.model}\n              placeholder='Model'\n            />\n          </Form.Group>\n          <Button type=\"submit\">Add Vehicle</Button>\n        </Form>\n      </>\n    )\n  }\n}\n\nexport default withRouter(AddCar)\n","// Reminder: Don't forget to render this component in a route (or AuthenticatedRoute) in App.js\n\n// Imports:\n// - React, Component\nimport React, { Component } from 'react'\n// - Link\nimport { Link } from 'react-router-dom'\n// - indexCars (or something) (api function)\nimport { indexCars } from '../../api/cars'\n// - optional messages\n\n// Create a new class inherits from Component\nclass IndexCars extends Component {\n  // - constructor (set up initial state)\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      cars: null\n    }\n  }\n\n  // - lifecycle method (right away when this component renders, make a request for all the cars & put em in state)\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n    indexCars(user)\n      .then(res => this.setState({ cars: res.data.cars }))\n      .then(() => msgAlert({ heading: 'Index success', message: 'Here\\'s the cars', variant: 'success' }))\n      .catch(err => msgAlert({ heading: 'Index failed :(', message: 'Something went wrong: ' + err.message, variant: 'danger' }))\n  }\n\n  // - render - display the cars in the state (optionally: loading message)\n  render () {\n    const { cars } = this.state\n    // This is what prevents the \"cannot read property map of undefined\" or other similar errors because on the first render, `cars` state will be `null`\n    if (cars === null) {\n      return 'Loading...'\n    }\n\n    let carJsx\n    if (cars.length === 0) {\n      carJsx = 'No cars, go create some'\n    } else {\n      // I want carJsx to be a bunch of li or Link or something with all my cars info in them\n      // .map gives us back a new array that we can display\n      carJsx = cars.map(car => (\n        <li key={car._id}>\n          <Link to={`/cars/${car._id}`}>\n            {car.year} {car.make} {car.model}\n          </Link>\n        </li>\n      ))\n    }\n\n    return (\n      <>\n        <h3>All The Cars:</h3>\n        {carJsx}\n      </>\n    )\n  }\n}\n\nexport default IndexCars\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { showCars, destroyCar } from '../../api/cars'\n\nimport Button from 'react-bootstrap/Button'\n\nclass ShowCars extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our ShowCars component\n      car: null,\n      ticket: null\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n    showCars(match.params.id, user)\n      .then(res => this.setState({ car: res.data.car }))\n      .then(() => msgAlert({\n        heading: 'Show car success',\n        message: 'Check out the car',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show car failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleDelete = (event) => {\n    const { match, user, msgAlert, history } = this.props\n    destroyCar(match.params.id, user)\n      // Redirect to the list of cars\n      .then(() => history.push('/cars'))\n      .then(() => msgAlert({ heading: 'Deleted car successfully', message: 'car is no more', variant: 'success' }))\n      .catch(err => msgAlert({ heading: 'Delete car failed :(', message: 'Something went wrong: ' + err.message, variant: 'danger' }))\n  }\n\n  render () {\n    if (this.state.car === null) {\n      return 'Loading...'\n    }\n\n    // Get the owner (a user id) from the car state\n    const { year, make, model, owner } = this.state.car\n    const { history, match, user } = this.props\n\n    return (\n      <>\n        <h3>Vehicle Ticket(s)</h3>\n        <h5>{year} {make} {model}</h5>\n        <p>This is where my tickets should be seen</p>\n        {/* Compare the signed in user's ID against the owner of this car */}\n        {user._id === owner && (\n          <>\n            <Button onClick={this.handleDelete}>Delete</Button>\n            {/* Button with a Link inside should work but is ugly. Better way below. */}\n            {/* <Button><Link to={`/cars/${match.params.id}/edit`}>Update</Link></Button> */}\n            {/* Provide the Button a `onClick` handler & use the history object to redirect the user */}\n            <Button onClick={() => history.push(`/cars/${match.params.id}/edit`)}>\n              Update\n            </Button>\n          </>\n        )}\n      </>\n    )\n  }\n}\n\nexport default withRouter(ShowCars)\n","import React from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CarForm = ({ car, handleSubmit, handleChange }) => (\n  <Form onSubmit={handleSubmit}>\n    <Form.Group controlId='year'>\n      <Form.Label>Year</Form.Label>\n      <Form.Control\n        required\n        name='year'\n        value={car.year}\n        placeholder='Year'\n        onChange={handleChange}\n      />\n    </Form.Group>\n    <Form.Group controlId='make'>\n      <Form.Label>Make</Form.Label>\n      <Form.Control\n        onChange={handleChange}\n        required\n        name='make'\n        value={car.make}\n        placeholder='Make'\n      />\n    </Form.Group>\n    <Form.Group controlId='model'>\n      <Form.Label>Model</Form.Label>\n      <Form.Control\n        onChange={handleChange}\n        required\n        name='model'\n        value={car.model}\n        placeholder='Model'\n      />\n    </Form.Group>\n    <Button type=\"submit\">Submit</Button>\n  </Form>\n\n)\n\nexport default CarForm\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateCar, showCars } from '../../api/cars'\nimport CarForm from '../shared/CarForm'\n\nclass UpdateItem extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our UpdateItem component\n      car: { // this should not be null\n        year: null, // must provide starting values for the form inputs\n        make: '',\n        model: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showCars(match.params.id, user)\n      .then(res => this.setState({ car: res.data.car }))\n      .then(() => msgAlert({\n        heading: 'Show car success',\n        message: 'Check out the car',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show car failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleChange = (event) => {\n    // because `this.state.car` is an object with multiple keys, we have to do some fancy updating\n    const userInput = { [event.target.name]: event.target.value }\n    this.setState(currState => {\n      // \"Spread\" out current car state key/value pairs, then add the new one at the end\n      // this will override the old key/value pair in the state but leave the others untouched\n      return { car: { ...currState.car, ...userInput } }\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history, match } = this.props\n\n    updateCar(this.state.car, match.params.id, user)\n      .then(res => history.push('/Cars/' + match.params.id))\n      .then(() => msgAlert({ heading: 'car Updated!', message: 'Nice work, go check out your car.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'car update failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <h3>Update One car Page</h3>\n        <CarForm\n          car={this.state.car}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdateItem)\n","// apiUrl will be either the production or development url defined\n// in the apiConfig.js file\nimport apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Ticket Request\n// assume that `data` is an object with `title` and `director`\n// { title: 'something', director: 'someone' }\n// POST /tickets/:carId\nexport const addTicket = (data, carId, user) => {\n  return axios({\n    url: apiUrl + '/tickets/' + carId,\n    method: 'post',\n    data: { ticket: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// GET /tickets/:carId/:ticketId\nexport const showTickets = (carId, ticketId, user) => {\n  return axios({\n    url: apiUrl + '/tickets/' + carId + ticketId,\n    // method is optional, default is GET\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// PATCH /tickets/:carId/:ticketId\nexport const updateTicket = (data, carId, ticketId, user) => {\n  return axios({\n    url: apiUrl + '/tickets/' + carId + ticketId,\n    method: 'PATCH',\n    data: { ticket: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// DELETE /tickets/:carId/:ticketId\nexport const destroyTicket = (carId, ticketId, user) => {\n  return axios({\n    url: apiUrl + '/tickets/' + carId + ticketId,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { addTicket } from '../../api/tickets'\n\nimport { withRouter } from 'react-router-dom'\n\nclass AddTicket extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      job: '',\n      labor: null,\n      isComplete: null\n    }\n  }\n\n  handleChange = (event) => {\n    // the event.target of this event will be an input element\n    // which will have a `name` attribute (key in the state) & a 'value' (what the user typed)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history } = this.props\n\n    addTicket(this.state, user)\n      .then(res => history.push('/tickets/:carId'))\n      .then(() => msgAlert({ heading: 'Ticket Assigned!', message: 'Your vehicle has been assigned a ticket.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Assigning Ticket failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmmit}>\n          <Form.Group>\n            <Form.Label>Job\n            </Form.Label>\n            <Form.Control\n              required\n              onChange={this.handleChange}\n              name='job'\n              value= {this.state.job}\n              placeholder='Job'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Labor\n            </Form.Label>\n            <Form.Control\n              required\n              name='labor'\n              onChange={this.handleChange}\n              value= {this.state.labor}\n              placeholder='Labor'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Completed\n            </Form.Label>\n            <Form.Control\n              required\n              name='isComplete'\n              onChange={this.handleChange}\n              value= {this.state.isComplete}\n              placeholder='Completed'\n            />\n          </Form.Group>\n          <Button type=\"submit\">Add Ticket</Button>\n        </Form>\n      </>\n    )\n  }\n}\n\nexport default withRouter(AddTicket)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { showTickets, destroyTicket } from '../../api/tickets'\n\nimport Button from 'react-bootstrap/Button'\n\nclass ShowTickets extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our ShowCars component\n      // car: null,\n      ticket: undefined\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n    console.log(this.props)\n    showTickets(match.params.id, user)\n      .then(res => this.setState({ ticket: res.data.ticket }))\n      .then(() => msgAlert({\n        heading: 'Show Ticket success',\n        message: 'Check out the ticket',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show ticket failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleDelete = (event) => {\n    const { match, user, msgAlert, history } = this.props\n    destroyTicket(match.params.id, user)\n      // Redirect to the list of cars\n      .then(() => history.push('/tickets'))\n      .then(() => msgAlert({ heading: 'Deleted ticket successfully', message: 'ticket is no more', variant: 'success' }))\n      .catch(err => msgAlert({ heading: 'Delete ticket failed :(', message: 'Something went wrong: ' + err.message, variant: 'danger' }))\n  }\n\n  render () {\n    if (this.state.ticket === null) {\n      return 'Loading...'\n    }\n\n    // Get the owner (a user id) from the car state\n    const { job, labor, isComplete, owner } = this.state.ticket\n    const { history, match, user } = this.props\n\n    return (\n      <>\n        <h3>Vehicle Ticket(s)</h3>\n        <h5>{job} {labor} {isComplete}</h5>\n        <p>This is where my tickets should be seen</p>\n        {/* Compare the signed in user's ID against the owner of this car */}\n        {user._id === owner && (\n          <>\n            <Button onClick={this.handleDelete}>Delete</Button>\n            {/* Button with a Link inside should work but is ugly. Better way below. */}\n            {/* <Button><Link to={`/cars/${match.params.id}/edit`}>Update</Link></Button> */}\n            {/* Provide the Button a `onClick` handler & use the history object to redirect the user */}\n            <Button onClick={() => history.push(`/tickets/${match.params.id}/edit`)}>\n              Update\n            </Button>\n          </>\n        )}\n      </>\n    )\n  }\n}\n\nexport default withRouter(ShowTickets)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateTicket, showTickets } from '../../api/tickets'\nimport TicketForm from '../shared/CarForm'\n\nclass UpdateTicket extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      // using null as a starting value will help us manage the \"loading state\" of our UpdateItem component\n      ticket: { // this should not be null\n        job: '', // must provide starting values for the form inputs\n        labor: null,\n        isComplete: null\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showTickets(match.params.id, user)\n      .then(res => this.setState({ car: res.data.ticket }))\n      .then(() => msgAlert({\n        heading: 'Show ticket success',\n        message: 'Check out the car',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Show ticket failed :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleChange = (event) => {\n    // because `this.state.car` is an object with multiple keys, we have to do some fancy updating\n    const userInput = { [event.target.name]: event.target.value }\n    this.setState(currState => {\n      // \"Spread\" out current car state key/value pairs, then add the new one at the end\n      // this will override the old key/value pair in the state but leave the others untouched\n      return { ticket: { ...currState.ticket, ...userInput } }\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const { user, msgAlert, history, match } = this.props\n\n    updateTicket(this.state.ticket, match.params.id, user)\n      .then(res => history.push('/Tickets/' + match.params.id))\n      .then(() => msgAlert({ heading: 'ticket Updated!', message: 'Nice work, go check out your ticket.', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'ticket update failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <h3>Update One car Page</h3>\n        <TicketForm\n          car={this.state.ticket}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n        />\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdateTicket)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n// Import individual custom components from our components directory\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\n// Import Auth components\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n// Import our Cars components\nimport AddCar from './components/cars/AddCar'\nimport IndexCars from './components/cars/IndexCars'\nimport ShowCars from './components/cars/ShowCars'\nimport UpdateCar from './components/cars/UpdateCar'\n// Import our Tickets components\nimport AddTicket from './components/tickets/AddTicket'\nimport ShowTickets from './components/tickets/ShowTickets'\nimport UpdateTicket from './components/tickets/UpdateTicket'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/add-cars'\n            render={() => (\n              <AddCar msgAlert={this.msgAlert} user={user}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/cars'\n            render={() =>\n              <IndexCars msgAlert={this.msgAlert} user={user}/>}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/cars/:id'\n            render={() => (\n              <ShowCars user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/cars/:id/edit'\n            render={() => (\n              <UpdateCar user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/add-tickets/:carId'\n            render={() => (\n              <AddTicket msgAlert={this.msgAlert} user={user}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/tickets/:carId/:ticketId'\n            render={() => (\n              <ShowTickets user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/tickets/:carId/:ticketId/edit'\n            render={() => (\n              <UpdateTicket user={user} msgAlert={this.msgAlert}/>\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}